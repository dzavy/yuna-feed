--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -23,7 +23,7 @@
 # Helper functions dealing with finding libraries and programs this library
 # depends on.

-include (../tools/cpp/gtest.cmake)
+#include (../tools/cpp/gtest.cmake)

 function (print_error DESCRIPTION FILE)
   message (FATAL_ERROR
@@ -94,7 +94,7 @@
   include_directories (${Boost_INCLUDE_DIRS})
 endif ()

-find_or_build_gtest ()
+#find_or_build_gtest ()

 if (${USE_RE2} STREQUAL "ON")
   find_required_library (RE2 re2/re2.h re2 "Google RE2")
@@ -242,10 +242,10 @@
 # Library sources excluding the metadata files, since special metadata is used
 # for unit-testing. Note that a single testing library is built for both
 # libphonenumber and geocoding.
-set (TESTING_LIBRARY_SOURCES ${SOURCES})
-if (${BUILD_GEOCODER} STREQUAL "ON")
-  list (APPEND TESTING_LIBRARY_SOURCES ${GEOCODING_SOURCES})
-endif ()
+#set (TESTING_LIBRARY_SOURCES ${SOURCES})
+#if (${BUILD_GEOCODER} STREQUAL "ON")
+#  list (APPEND TESTING_LIBRARY_SOURCES ${GEOCODING_SOURCES})
+#endif ()

 # Add metadata code generation targets.

@@ -299,14 +299,14 @@
 endif ()

 # Add the test metadata generation target.
-set (TEST_METADATA_TARGET "generate-test-metadata")
-add_metadata_gen_target (
-  ${TEST_METADATA_TARGET}
-  "${RESOURCES_DIR}/PhoneNumberMetadataForTesting.xml"
-  "test_metadata"
-  "metadata"
-)
-list (APPEND TESTING_LIBRARY_SOURCES "src/phonenumbers/test_metadata.cc")
+#set (TEST_METADATA_TARGET "generate-test-metadata")
+#add_metadata_gen_target (
+#  ${TEST_METADATA_TARGET}
+#  "${RESOURCES_DIR}/PhoneNumberMetadataForTesting.xml"
+#  "test_metadata"
+#  "metadata"
+#)
+#list (APPEND TESTING_LIBRARY_SOURCES "src/phonenumbers/test_metadata.cc")

 # Add the short metadata generation target.
 set (SHORT_METADATA_TARGET "generate-short-number-metadata")
@@ -317,8 +317,8 @@
   "short_metadata"
 )
 # This is used both for the real library and for testing.
-list (APPEND SOURCES "src/phonenumbers/short_metadata.cc")
-list (APPEND TESTING_LIBRARY_SOURCES "src/phonenumbers/short_metadata.cc")
+#list (APPEND SOURCES "src/phonenumbers/short_metadata.cc")
+#list (APPEND TESTING_LIBRARY_SOURCES "src/phonenumbers/short_metadata.cc")

 if (${USE_ICU_REGEXP} STREQUAL "ON")
   if (${USE_ALTERNATE_FORMATS} STREQUAL "ON")
@@ -430,88 +430,88 @@
 endif ()

 # Build a specific library for testing purposes.
-add_library (phonenumber_testing STATIC ${TESTING_LIBRARY_SOURCES})
-if (${BUILD_GEOCODER} STREQUAL "ON")
-  add_dependencies (phonenumber_testing generate_geocoding_data)
-endif ()
-target_link_libraries (phonenumber_testing ${LIBRARY_DEPS})
-
-if (${BUILD_GEOCODER} STREQUAL "ON")
-  # Test geocoding data cpp files generation.
-  set (GEOCODING_TEST_DIR "${RESOURCES_DIR}/test/geocoding")
-  file (GLOB_RECURSE GEOCODING_TEST_SOURCES "${GEOCODING_TEST_DIR}/*.txt")
-
-  set (GEOCODING_TEST_DATA_OUTPUT
-    "${CMAKE_SOURCE_DIR}/test/phonenumbers/geocoding/geocoding_test_data.cc"
-  )
-
-  add_custom_command (
-    COMMAND generate_geocoding_data "${GEOCODING_TEST_DIR}"
-      "${GEOCODING_TEST_DATA_OUTPUT}" "_test"
-
-    OUTPUT ${GEOCODING_TEST_DATA_OUTPUT}
-    DEPENDS ${GEOCODING_TEST_SOURCES} generate_geocoding_data
-    COMMENT "Generating geocoding test data code"
-  )
-endif ()
-
-
-set (TEST_SOURCES
-  "test/phonenumbers/asyoutypeformatter_test.cc"
-  "test/phonenumbers/logger_test.cc"
-  "test/phonenumbers/phonenumberutil_test.cc"
-  "test/phonenumbers/regexp_adapter_test.cc"
-  "test/phonenumbers/regexp_cache_test.cc"
-  "test/phonenumbers/run_tests.cc"
-  "test/phonenumbers/shortnumberinfo_test.cc"
-  "test/phonenumbers/stringutil_test.cc"
-  "test/phonenumbers/test_util.cc"
-  "test/phonenumbers/unicodestring_test.cc"
-  "test/phonenumbers/utf/unicodetext_test.cc"
-)
-
-if (${BUILD_GEOCODER} STREQUAL "ON")
-  set (GEOCODING_TEST_SOURCES
-    "test/phonenumbers/geocoding/area_code_map_test.cc"
-    "test/phonenumbers/geocoding/geocoding_data_test.cc"
-    "test/phonenumbers/geocoding/geocoding_test_data.cc"
-    "test/phonenumbers/geocoding/mapping_file_provider_test.cc"
-    "test/phonenumbers/geocoding/phonenumber_offline_geocoder_test.cc"
-  )
-  list (APPEND TEST_SOURCES ${GEOCODING_TEST_SOURCES})
-endif ()
-
-if (${USE_ICU_REGEXP} STREQUAL "ON")
-  # Add the phone number matcher tests.
-  list (APPEND TEST_SOURCES "test/phonenumbers/phonenumbermatch_test.cc")
-  list (APPEND TEST_SOURCES "test/phonenumbers/phonenumbermatcher_test.cc")
-endif ()
+#add_library (phonenumber_testing STATIC ${TESTING_LIBRARY_SOURCES})
+#if (${BUILD_GEOCODER} STREQUAL "ON")
+#  add_dependencies (phonenumber_testing generate_geocoding_data)
+#endif ()
+#target_link_libraries (phonenumber_testing ${LIBRARY_DEPS})
+
+#if (${BUILD_GEOCODER} STREQUAL "ON")
+#  # Test geocoding data cpp files generation.
+#  set (GEOCODING_TEST_DIR "${RESOURCES_DIR}/test/geocoding")
+#  file (GLOB_RECURSE GEOCODING_TEST_SOURCES "${GEOCODING_TEST_DIR}/*.txt")
+#
+#  set (GEOCODING_TEST_DATA_OUTPUT
+#    "${CMAKE_SOURCE_DIR}/test/phonenumbers/geocoding/geocoding_test_data.cc"
+#  )
+#
+#  add_custom_command (
+#    COMMAND generate_geocoding_data "${GEOCODING_TEST_DIR}"
+#      "${GEOCODING_TEST_DATA_OUTPUT}" "_test"
+#
+#    OUTPUT ${GEOCODING_TEST_DATA_OUTPUT}
+#    DEPENDS ${GEOCODING_TEST_SOURCES} generate_geocoding_data
+#    COMMENT "Generating geocoding test data code"
+#  )
+#endif ()
+
+
+#set (TEST_SOURCES
+#  "test/phonenumbers/asyoutypeformatter_test.cc"
+#  "test/phonenumbers/logger_test.cc"
+#  "test/phonenumbers/phonenumberutil_test.cc"
+#  "test/phonenumbers/regexp_adapter_test.cc"
+#  "test/phonenumbers/regexp_cache_test.cc"
+#  "test/phonenumbers/run_tests.cc"
+#  "test/phonenumbers/shortnumberinfo_test.cc"
+#  "test/phonenumbers/stringutil_test.cc"
+#  "test/phonenumbers/test_util.cc"
+#  "test/phonenumbers/unicodestring_test.cc"
+#  "test/phonenumbers/utf/unicodetext_test.cc"
+#)
+
+#if (${BUILD_GEOCODER} STREQUAL "ON")
+#  set (GEOCODING_TEST_SOURCES
+#    "test/phonenumbers/geocoding/area_code_map_test.cc"
+#    "test/phonenumbers/geocoding/geocoding_data_test.cc"
+#    "test/phonenumbers/geocoding/geocoding_test_data.cc"
+#    "test/phonenumbers/geocoding/mapping_file_provider_test.cc"
+#    "test/phonenumbers/geocoding/phonenumber_offline_geocoder_test.cc"
+#  )
+#  list (APPEND TEST_SOURCES ${GEOCODING_TEST_SOURCES})
+#endif ()
+
+#if (${USE_ICU_REGEXP} STREQUAL "ON")
+#  # Add the phone number matcher tests.
+#  list (APPEND TEST_SOURCES "test/phonenumbers/phonenumbermatch_test.cc")
+#  list (APPEND TEST_SOURCES "test/phonenumbers/phonenumbermatcher_test.cc")
+#endif ()

 # Build the testing binary.
-include_directories ("test")
-add_executable (libphonenumber_test ${TEST_SOURCES})
-set (TEST_LIBS phonenumber_testing ${GTEST_LIB})
-
-if (NOT WIN32)
-  list (APPEND TEST_LIBS pthread)
-endif ()
+#include_directories ("test")
+#add_executable (libphonenumber_test ${TEST_SOURCES})
+#set (TEST_LIBS phonenumber_testing ${GTEST_LIB})
+
+#if (NOT WIN32)
+#  list (APPEND TEST_LIBS pthread)
+#endif ()

-target_link_libraries (libphonenumber_test ${TEST_LIBS})
+#target_link_libraries (libphonenumber_test ${TEST_LIBS})

 # Unfortunately add_custom_target() can't accept a single command provided as a
 # list of commands.
-if (${BUILD_GEOCODER} STREQUAL "ON")
-  add_custom_target (tests
-    COMMAND generate_geocoding_data_test
-    COMMAND libphonenumber_test
-    DEPENDS generate_geocoding_data_test libphonenumber_test
-  )
-else ()
-  add_custom_target (tests
-    COMMAND libphonenumber_test
-    DEPENDS libphonenumber_test
-  )
-endif ()
+#if (${BUILD_GEOCODER} STREQUAL "ON")
+#  add_custom_target (tests
+#    COMMAND generate_geocoding_data_test
+#    COMMAND libphonenumber_test
+#    DEPENDS generate_geocoding_data_test libphonenumber_test
+#  )
+#else ()
+#  add_custom_target (tests
+#    COMMAND libphonenumber_test
+#    DEPENDS libphonenumber_test
+#  )
+#endif ()

 # Install rules.
 install (FILES
@@ -583,10 +583,10 @@

 # Build an example program using geocoding, mainly to make sure that both
 # libraries are built properly.
-if (${BUILD_GEOCODER} STREQUAL "ON")
-  add_executable (
-    geocoding_test_program
-    "test/phonenumbers/geocoding/geocoding_test_program.cc"
-  )
-  target_link_libraries (geocoding_test_program geocoding phonenumber)
-endif ()
+#if (${BUILD_GEOCODER} STREQUAL "ON")
+#  add_executable (
+#    geocoding_test_program
+#    "test/phonenumbers/geocoding/geocoding_test_program.cc"
+#  )
+#  target_link_libraries (geocoding_test_program geocoding phonenumber)
+#endif ()

--- a/tools/cpp/CMakeLists.txt
+++ b/tools/cpp/CMakeLists.txt
@@ -21,9 +21,9 @@
 # Helper functions dealing with finding libraries and programs this library
 # depends on.

-include (gtest.cmake)
+#include (gtest.cmake)

-find_or_build_gtest ()
+#find_or_build_gtest ()

 set (
   SOURCES
@@ -39,19 +39,19 @@

 add_executable (generate_geocoding_data ${SOURCES})

-set (TEST_SOURCES
-  "src/cpp-build/generate_geocoding_data.cc"
-  "test/cpp-build/generate_geocoding_data_test.cc"
-  "test/cpp-build/run_tests.cc"
-)
-
-set (TEST_LIBS ${GTEST_LIB})
-
-if (NOT WIN32)
-  list (APPEND TEST_LIBS pthread)
-endif ()
+#set (TEST_SOURCES
+#  "src/cpp-build/generate_geocoding_data.cc"
+#  "test/cpp-build/generate_geocoding_data_test.cc"
+#  "test/cpp-build/run_tests.cc"
+#)
+
+#set (TEST_LIBS ${GTEST_LIB})
+
+#if (NOT WIN32)
+#  list (APPEND TEST_LIBS pthread)
+#endif ()

 # Build the testing binary.
-include_directories ("test")
-add_executable (generate_geocoding_data_test ${TEST_SOURCES})
-target_link_libraries (generate_geocoding_data_test ${TEST_LIBS})
+#include_directories ("test")
+#add_executable (generate_geocoding_data_test ${TEST_SOURCES})
+#target_link_libraries (generate_geocoding_data_test ${TEST_LIBS})
