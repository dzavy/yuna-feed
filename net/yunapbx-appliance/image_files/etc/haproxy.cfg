global
    user haproxy
    group haproxy
    daemon
    log /dev/log daemon
    ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    ssl-default-bind-options no-sslv3

defaults
    mode http
    option forwardfor
    option http-server-close
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    timeout tunnel 1h

frontend public
    bind :80
    bind :::80

    redirect scheme https if !{ ssl_fc }

    bind :443 ssl crt /data/ssl/server.keycrt
    bind :::443 ssl crt /data/ssl/server.keycrt

    use_backend asterisk if { path_beg /ws }
    use_backend prosody if { path_beg /http-bind }
    default_backend lighttpd

backend asterisk
    #source 0.0.0.0 usesrc clientip
    server asterisk1 127.0.0.1:8089 ssl verify none

backend prosody
    reqadd X-Forwarded-Proto:\ https
    server prosody1 127.0.0.1:5280 check

backend lighttpd
    #source 0.0.0.0 usesrc clientip
    server lighttpd1 127.0.0.1:8080
